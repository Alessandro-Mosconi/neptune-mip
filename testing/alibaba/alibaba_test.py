import os
import pprint
import json
import time

import requests

folder = "alibaba_test/"

for solver_type in [
    "EfttcMinDelay",
    "EfttcMinUtilization",
    "EfttcMinDelayAndUtilization",
    "NeptuneMinDelayAndUtilization",
    "NeptuneMinDelay",
    "NeptuneMinUtilization",
    #"VSVBP",
    #"Criticality",
    #"CriticalityHeuristic",
    #"MCF"
]:

    inputs = [
        # Simplest input
        # 100 node, 25 function
        # 2 function allocated
        {
            "case": 0,
            "solver": {
                "type": solver_type,
                "args": {
                    "alpha": 0.5,
                    "verbose": False
                }
            },
            "with_db": False,
            "community": "community-trace",
            "namespace": "namespace-trace",
            "node_names": [
                "m_1",
                "m_10",
                "m_100",
                "m_1000",
                "m_1001",
                "m_1002",
                "m_1003",
                "m_1004",
                "m_1005",
                "m_1006",
                "m_1007",
                "m_1008",
                "m_1009",
                "m_101",
                "m_1010",
                "m_1011",
                "m_1012",
                "m_1013",
                "m_1014",
                "m_1015",
                "m_1016",
                "m_1017",
                "m_1018",
                "m_1019",
                "m_102",
                "m_1020",
                "m_1021",
                "m_1022",
                "m_1023",
                "m_1024",
                "m_1025",
                "m_1026",
                "m_1027",
                "m_1028",
                "m_1029",
                "m_103",
                "m_1030",
                "m_1031",
                "m_1032",
                "m_1033",
                "m_1034",
                "m_1035",
                "m_1036",
                "m_1037",
                "m_1038",
                "m_1039",
                "m_104",
                "m_1040",
                "m_1041",
                "m_1042",
                "m_1043",
                "m_1044",
                "m_1045",
                "m_1046",
                "m_1047",
                "m_1048",
                "m_1049",
                "m_105",
                "m_1050",
                "m_1051",
                "m_1052",
                "m_1053",
                "m_1054",
                "m_1055",
                "m_1056",
                "m_1057",
                "m_1058",
                "m_1059",
                "m_106",
                "m_1060",
                "m_1061",
                "m_1062",
                "m_1063",
                "m_1064",
                "m_1065",
                "m_1066",
                "m_1067",
                "m_1068",
                "m_1069",
                "m_107",
                "m_1070",
                "m_1071",
                "m_1072",
                "m_1073",
                "m_1074",
                "m_1075",
                "m_1076",
                "m_1077",
                "m_1078",
                "m_1079",
                "m_108",
                "m_1080",
                "m_1081",
                "m_1082",
                "m_1083",
                "m_1084",
                "m_1085",
                "m_1086",
                "m_1087",
                "m_1088"
            ],
            "node_memories": [
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100
            ],
            "node_cores": [
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96,
                96
            ],
            "gpu_node_names": [],
            "gpu_node_memories": [],
            "function_names": [
                "j_2612/M4_3",
                "j_2014/M1",
                "j_2745/R9_15",
                "j_2745/R2_1",
                "j_2745/M7_6",
                "j_2745/R14_13",
                "j_2745/R3_7",
                "j_2745/J4_2_3",
                "j_2612/R5_4",
                "j_2745/J17_4_8_12_14_16",
                "j_2745/R8_7",
                "j_2745/M1",
                "j_2745/R10_9",
                "j_2612/R2_1",
                "j_2745/R16_15",
                "j_2612/R3_2",
                "j_2745/R5_15",
                "j_1527/M1",
                "j_217/task_LTg0MTUwNTA5Mjg4MDkwNjIzMA==",
                "j_2612/M1",
                "j_2014/R2_1",
                "j_2745/M11_10",
                "j_2745/R12_11",
                "j_2745/M15",
                "j_2745/R6_5"
            ],
            "function_memories": [
                0.39,
                0.49,
                0.2,
                0.3,
                0.39,
                0.2,
                0.2,
                0.3,
                0.2,
                0.2,
                0.2,
                0.39,
                0.2,
                0.2,
                0.2,
                0.2,
                0.2,
                0.39,
                0.1,
                0.2,
                0.39,
                0.39,
                0.2,
                0.3,
                0.2
            ],
            "function_max_delays": [
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100,
                100
            ],
            "gpu_function_names": [],
            "gpu_function_memories": [],
            "actual_cpu_allocations": {
                "j_2014/M1": {
                    "m_1038": True,
                    "m_1002": True,
                    "m_1060": True,
                    "m_1008": True,
                    "m_1063": True,
                    "m_1043": True,
                    "m_1036": True,
                    "m_1078": True
                },
                "j_2745/M7_6": {
                    "m_1024": True,
                    "m_1038": True,
                    "m_1019": True,
                    "m_1084": True,
                    "m_1009": True,
                    "m_1048": True,
                    "m_1002": True
                }
            },
            "actual_gpu_allocations": {}
        }
    ]

    for i, input_request in enumerate(inputs):

        start_time = time.time()
        response = requests.request(method='get', url="http://localhost:5000/", json=input_request)
        elapsed_time = time.time() - start_time

        print("=" * 40)
        print(f"Solver: {solver_type}")
        print("Status:", response.status_code)


        output_file = f"alibaba_test/output_{solver_type}_case{i}.json"

        try:
            response_json = response.json()
            response_json["response_time"] = elapsed_time
            json.dumps(input_request)
            response_json["input"] = input_request
            pprint.pprint(response_json)
            with open(output_file, 'w') as f:
                json.dump(response_json, f, indent=4)
            print(f"✓ Risposta JSON salvata in {output_file}")
        except Exception as e:
            print("❌ Errore nel parsing JSON:", e)
            print("Contenuto grezzo della risposta:")
            print(response.text)
            with open(output_file, 'w') as f:
                f.write(response.text)
            print(f"⚠️ Risposta grezza salvata in {output_file}")
